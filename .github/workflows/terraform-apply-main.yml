name: Terraform apply
run-name: Create API Gateway setup
on:
  push:
    branches:
      - main      # Apenas on push na main (PR aceito)
  workflow_dispatch: {}

jobs:
  get-service-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      # Getting info from pre-requisite services
      - name: Get Cognito UserPool Info
        id: cognito-info
        run: ./utils/get-user-pool-info.sh ${{vars.COGNITO_USER_POOL}} >> $GITHUB_OUTPUT

      - name: Get App LoadBalancer Listener - Web Api
        id: lb-listener-info-web-api
        run: ./utils/find-load-balancer.sh ${{vars.SERVICE_PORT_WEB_API}} >> $GITHUB_OUTPUT

    outputs:
      cognito_user_pool_client_id: ${{steps.cognito-info.outputs.USER_POOL_CLIENT_ID}}
      cognito_user_pool_client_secret: ${{steps.cognito-info.outputs.USER_POOL_CLIENT_SECRET}}
      load_balancer_web_api_arn: ${{steps.lb-listener-info-web-api.outputs.LISTENER_ARN}}

  terraform-apply:
    needs: get-service-info
    uses: ./.github/workflows/_run-terraform-command.yml
    with:
      TERRAFORM_COMMAND: apply --auto-approve

      TERRAFORM_VARS: -var http_api_id=${{needs.get-service-info.outputs.http_api_id}} -var cognito_user_pool_client_id=${{needs.get-service-info.outputs.cognito_user_pool_client_id}} -var load_balancer_web_api_arn=${{needs.get-service-info.outputs.load_balancer_web_api_arn}}

      AWS_REGION: us-east-1
      TF_STATE_BUCKET_NAME: ${{vars.TF_STATE_BUCKET_NAME}}
      TF_STATE_BUCKET_PATH: ${{vars.TF_STATE_BUCKET_PATH}}
      TF_LOCK_TABLE_NAME: ${{vars.TF_LOCK_TABLE_NAME}}

    secrets:
      TERRAFORM_SECRET_VARS: -var cognito_user_pool_client_secret=${{needs.get-service-info.outputs.cognito_user_pool_client_secret}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
